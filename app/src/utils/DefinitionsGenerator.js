import Chance from 'chance';

const chance = new Chance();

//startFrom is a DateTime object
const generateRandomDateTime = (startFrom = null) => {
    const startFromYear = startFrom ? startFrom.getFullYear() : Date.min;
    const thisYear = new Date(Date.now()).getFullYear();
    let generatedDateTime = Date.min;

    do {
        let year = chance.year({min: startFromYear, max: thisYear});
        let monthIndex = chance.integer({min: 0, max: 11});
        let day = chance.integer({min: 1, max: 28});
        let hour = chance.hour({twentyfour: true});
        let minute = chance.minute();
        let second = chance.second();
        generatedDateTime = new Date(year, monthIndex, day, hour, minute, second);
    }
    while (generatedDateTime <= startFrom);

    return generatedDateTime;
};

const generateRandomRecipient = () => {
    // For simplicity of this solution only we will generate the id here,
    // but IRL we would want it to be autogenerated in the server/DB
    return {
        "_id": chance.string({ length: 12, alpha: true, numeric: true }),  
        "name": chance.name({ nationality: 'en' }), 
        "email_address": chance.email({domain: "example.com"})
    };
};

const generateRandomDefinition = () => {
    // For simplicity of this solution only we will generate the id here,
    // but IRL we would want it to be autogenerated in the server/DB
    const id = chance.string({ length: 12, alpha: true, numeric: true });
    const numOfRecipients = chance.integer({min: 1, max: 5});
    const recps = [];

    for(let i = 0; i < numOfRecipients; i++) {
        let recp = generateRandomRecipient(chance);
        recps.push(recp);
    };

    const title = chance.sentence();
    const body = chance.paragraph();
    const start_timestamp = generateRandomDateTime();
    const start_datetime = start_timestamp.toISOString();
    const end_timestamp = generateRandomDateTime(start_timestamp);
    const end_datetime = end_timestamp.toISOString();
    const granularity = {
        "num": chance.integer({min: 1, max: 30}), 
        "units": chance.pickset(['minutes', 'hours', 'days', 'months', 'years'])[0]
    };
    const timezone = `${chance.pickset(['+','-'])[0]}0${chance.integer({min: 0, max: 9})}`;
    const treatment_datetime = null;

    return {
        "_id": id, 
        "recipients": recps, 
        "title": title, 
        "body": body, 
        "start_datetime": start_datetime,
        "end_datetime": end_datetime, 
        "granularity": granularity,
        "timezone": timezone, 
        "treatment_datetime": treatment_datetime
    };
};

export const generateDefinitions = () => {
    const numOfDefs = chance.integer({min: 1, max: 20});
    const ret = [];

    for(let i = 0; i < numOfDefs; i++) {
        let def = generateRandomDefinition(chance);
        ret.push(def);
    };

    return ret;
};